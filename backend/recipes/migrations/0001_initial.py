# Generated by Django 4.2.1 on 2023-06-04 20:39

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pub_date', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Date added')),
            ],
            options={
                'verbose_name': 'Favorite',
                'verbose_name_plural': 'Favorites',
                'ordering': ('-pub_date',),
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter the name of the ingredient', max_length=200, verbose_name='Name of ingredient')),
                ('measurement_unit', models.CharField(help_text='Enter measurement unit', max_length=200, verbose_name='Measurement unit')),
            ],
            options={
                'verbose_name': 'Ingredient',
                'verbose_name_plural': 'Ingredients',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name of the recipe')),
                ('cooking_time', models.PositiveSmallIntegerField(help_text='Enter the cooking time in minutes', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Cooking time in minutes')),
                ('pub_date', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Date and time of recipe creation')),
                ('text', models.TextField(help_text='Enter the description of the recipe', verbose_name='Recipe description')),
                ('image', models.ImageField(default=None, help_text='Attach a photo of the recipe', null=True, upload_to='recipes/images/', verbose_name='Image of the recipe')),
            ],
            options={
                'verbose_name': 'Recipe',
                'verbose_name_plural': 'Recipes',
                'ordering': ('-pub_date',),
            },
        ),
        migrations.CreateModel(
            name='RecipeIngredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Amount')),
            ],
            options={
                'verbose_name': 'Ingredient in recipe',
                'verbose_name_plural': 'Ingredients in recipes',
                'ordering': ('recipe__name',),
            },
        ),
        migrations.CreateModel(
            name='ShoppingCart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pub_date', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Date added')),
            ],
            options={
                'verbose_name': 'Shopping cart',
                'verbose_name_plural': 'Shopping carts',
                'ordering': ('-pub_date',),
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter the tag name', max_length=200, unique=True, verbose_name='Name of tag')),
                ('color', models.CharField(help_text='Enter color HEX-code of the tag', max_length=7, unique=True, verbose_name='Color of the tag')),
                ('slug', models.CharField(max_length=200, unique=True, verbose_name='Tag slug')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'ordering': ('name',),
            },
        ),
    ]
