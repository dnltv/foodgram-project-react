# Generated by Django 4.2.1 on 2023-05-26 11:33

import core.limitations
import core.validators
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AmountIngredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MinValueValidator(core.limitations.Limits['MIN_AMOUNT_INGREDIENTS'], 'Specify a larger amount of ingredients'), django.core.validators.MaxValueValidator(core.limitations.Limits['MAX_LEN_USERS_CHARFIELD'], 'Specify fewer ingredients')], verbose_name='Amount')),
            ],
            options={
                'verbose_name': 'Ingredient',
                'verbose_name_plural': 'Amount of ingredients',
                'ordering': ('recipe',),
            },
        ),
        migrations.CreateModel(
            name='Carts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(auto_now_add=True, verbose_name='Date added')),
            ],
            options={
                'verbose_name': 'Recipe in the shopping cart',
                'verbose_name_plural': 'Recipes in the shopping cart',
            },
        ),
        migrations.CreateModel(
            name='Favorites',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(auto_now_add=True, verbose_name='Date added')),
            ],
            options={
                'verbose_name': 'Favorite recipe',
                'verbose_name_plural': 'Favorites recipes',
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Ingredient')),
                ('measurement_unit', models.CharField(max_length=24, verbose_name='Measurement unit')),
            ],
            options={
                'verbose_name': 'Ingredient',
                'verbose_name_plural': 'Ingredients',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Name of the recipe')),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='')),
                ('image', models.ImageField(upload_to='recipe_images/', verbose_name='Image of the dish')),
                ('text', models.TextField(max_length=5000, verbose_name='Description of the dish')),
                ('cooking_time', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1, 'Cooking time is too short'), django.core.validators.MaxValueValidator(300, 'Cooking time is too long')], verbose_name='Cooking time')),
            ],
            options={
                'verbose_name': 'Recipe',
                'verbose_name_plural': 'Recipes',
                'ordering': ('-pub_date',),
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, validators=[core.validators.OneOfTwoValidator(field='tag name')], verbose_name='Tag')),
                ('color', models.CharField(max_length=7, unique=True, verbose_name='Color')),
                ('slug', models.CharField(max_length=64, unique=True, verbose_name='tag slug')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'ordering': ('name',),
            },
        ),
    ]
